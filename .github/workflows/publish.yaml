# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
# Trigger this workflow with `pnpm run release patch`
name: Publish
on:
  push:
    tags: ["*.*.*"]

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
        with: # Needed for the `--notes-from-tag` option to work
          fetch-depth: 0
          ref: ${{ github.ref }}

      - uses: pnpm/action-setup@v4
        with:
          version: 10
      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'
          registry-url: 'https://registry.npmjs.org'

      - name: Build
        run: |
          pnpm install --frozen-lockfile
          pnpm run --aggregate-output --reporter-hide-prefix build

      - name: Github Release
        run: |
          VERSION="${GITHUB_REF#refs/tags/}"
          gh release create "$VERSION" --title="$VERSION" --verify-tag --notes-from-tag $RELEASE_TYPE
        env:
          RELEASE_TYPE: ${{ contains(github.ref, '-') && '--prerelease' || ''}}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish
        run: pnpm publish -r --aggregate-output --no-git-checks --tag $RELEASE_TYPE
        env:
          RELEASE_TYPE: ${{ contains(github.ref, '-') && 'beta' || 'latest'}}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Generate docs
        run: pnpm run doc

      - name: Upload docs as artifact
        id: deployment
        uses: actions/upload-pages-artifact@v3
        with:
          name: github-pages
          path: generated-docs/

  deploy-docs:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: [publish]
    permissions:
      pages: write
      id-token: write
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          artifact_name: github-pages

  update-sample-repo:
    runs-on: ubuntu-latest
    needs: [publish]
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
        with:
          repository: 'jesse-r-s-hines/wdio-obsidian-service-sample-plugin'
          ref: 'main'
          fetch-depth: 0 # fetch full history
          token: ${{ secrets.GH_PAT }}

      - uses: actions/setup-node@v4
        with:
          node-version: "22.x"
          cache: 'npm'

      - name: "Update dependencies"
        run: |
          VERSION="${GITHUB_REF#refs/tags/}"
          npm install --save-dev \
            wdio-obsidian-service@^$VERSION \
            wdio-obsidian-reporter@^$VERSION \
            obsidian-launcher@^$VERSION
          npm update --save

      - name: Make PR
        run: |
          git config --global user.name '${{github.repository_owner}}'
          git config --global user.email '${{github.repository_owner}}@users.noreply.github.com'
          git pull
          git switch --force-create auto-update-dependencies
          git add package.json package-lock.json
          git commit -m "Auto update dependencies"
          git push --set-upstream origin -f auto-update-dependencies
          # create a PR set to auto-merge if pipeline passes.
          if [[ "$(gh pr status --json closed --jq .currentBranch.closed)" != "false" ]]; then
            gh pr create --fill # Skip create if it already exists
          fi
          gh pr merge --auto --delete-branch --rebase
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
