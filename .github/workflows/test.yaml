name: Test
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  test:
    strategy:
      matrix:
        os: 
          - ubuntu-latest
          - windows-latest
          - macos-latest
        node-version: ["18.x"]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Cache .wdio-cache
        uses: actions/cache@v4
        with:
          path: .wdio-cache
          key: wdio-cache-${{matrix.os}}-${{ hashFiles('./obsidian-versions.json') }}
          restore-keys: wdio-cache-${{matrix.os}}-

      - name: Build
        run: |
          npm ci
          npm run build
      
      - name: Run unit tests
        run: npm run test:unit

      - name: Run e2e tests
        # On linux we need to use xvfb-run to setup a virtual display server
        run: |
          ${{ matrix.os == 'ubuntu-latest' && 'xvfb-run --server-args="-screen 0 1280x1024x24"  \' || '' }}
          npm run test:e2e
        env:
          TEST_ENV: ${{matrix.os}}
          WDIO_MAX_INSTANCES: ${{matrix.os == 'macos-latest' && '2' || '4'}}
          # Secrets won't be available when run as on a PR
          OBSIDIAN_USERNAME: ${{ secrets.OBSIDIAN_USERNAME }}
          OBSIDIAN_PASSWORD: ${{ secrets.OBSIDIAN_PASSWORD }}
